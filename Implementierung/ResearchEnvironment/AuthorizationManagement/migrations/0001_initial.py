# Generated by Django 2.0.1 on 2018-01-17 14:57

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeletionRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='default_type', max_length=50)),
                ('name', models.CharField(default='default_name', max_length=150)),
                ('description', models.CharField(default='default_description', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='readers',
            field=models.ManyToManyField(related_name='reader', to='AuthorizationManagement.CustomUser'),
        ),
        migrations.AddField(
            model_name='deletionrequest',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuthorizationManagement.Resource'),
        ),
        migrations.AddField(
            model_name='deletionrequest',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuthorizationManagement.CustomUser'),
        ),
        migrations.AddField(
            model_name='accessrequest',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuthorizationManagement.Resource'),
        ),
        migrations.AddField(
            model_name='accessrequest',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuthorizationManagement.CustomUser'),
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('AuthorizationManagement.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='owner',
            field=models.ManyToManyField(related_name='owner', to='AuthorizationManagement.Owner'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('AuthorizationManagement.owner',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
